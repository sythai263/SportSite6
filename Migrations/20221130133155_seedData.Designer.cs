// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportSite6.Database;

#nullable disable

namespace SportSite6.Migrations
{
	[DbContext(typeof(DBContext))]
	[Migration("20221130133155_seedData")]
	partial class seedData
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "6.0.11")
					.HasAnnotation("Relational:MaxIdentifierLength", 64);

			modelBuilder.Entity("SportSite6.Models.Category", b =>
					{
						b.Property<int>("id")
											.ValueGeneratedOnAdd()
											.HasColumnType("int")
											.HasColumnName("id");

						b.Property<string>("description")
											.HasColumnType("text")
											.HasColumnName("description");

						b.Property<sbyte>("display")
											.HasColumnType("tinyint")
											.HasColumnName("display");

						b.Property<int?>("media_id")
											.HasColumnType("int");

						b.Property<string>("slug")
											.HasColumnType("varchar(255)")
											.HasColumnName("slug");

						b.Property<string>("title")
											.HasColumnType("varchar(2000)")
											.HasColumnName("title");

						b.HasKey("id");

						b.HasIndex("media_id");

						b.ToTable("category");
					});

			modelBuilder.Entity("SportSite6.Models.Content", b =>
					{
						b.Property<int>("id")
											.ValueGeneratedOnAdd()
											.HasColumnType("int")
											.HasColumnName("id");

						b.Property<DateTime>("createdAt")
											.HasColumnType("datetime")
											.HasColumnName("created_at");

						b.Property<int>("createdBy")
											.HasColumnType("int")
											.HasColumnName("created_by");

						b.Property<sbyte>("display")
											.HasColumnType("tinyint")
											.HasColumnName("display");

						b.Property<string>("heading")
											.HasColumnType("varchar(5000)")
											.HasColumnName("heading");

						b.Property<string>("information")
											.HasColumnType("text")
											.HasColumnName("information");

						b.Property<int?>("media_id")
											.HasColumnType("int");

						b.Property<int?>("page_id")
											.HasColumnType("int");

						b.Property<DateTime>("updatedAt")
											.HasColumnType("datetime")
											.HasColumnName("updated_at");

						b.HasKey("id");

						b.HasIndex("media_id");

						b.HasIndex("page_id");

						b.ToTable("content");
					});

			modelBuilder.Entity("SportSite6.Models.Evaluation", b =>
					{
						b.Property<int>("id")
											.ValueGeneratedOnAdd()
											.HasColumnType("int")
											.HasColumnName("id");

						b.Property<string>("content")
											.HasColumnType("text")
											.HasColumnName("content");

						b.Property<DateTime>("createdAt")
											.HasColumnType("datetime")
											.HasColumnName("created_at");

						b.Property<int>("createdBy")
											.HasColumnType("int")
											.HasColumnName("created_by");

						b.Property<int?>("media_id")
											.HasColumnType("int");

						b.Property<short>("rate")
											.HasColumnType("smallint")
											.HasColumnName("rate");

						b.Property<int?>("user_id")
											.HasColumnType("int");

						b.HasKey("id");

						b.HasIndex("media_id");

						b.HasIndex("user_id");

						b.ToTable("evaluation");
					});

			modelBuilder.Entity("SportSite6.Models.Media", b =>
					{
						b.Property<int>("id")
											.ValueGeneratedOnAdd()
											.HasColumnType("int")
											.HasColumnName("id");

						b.Property<string>("altText")
											.HasColumnType("varchar(2000)")
											.HasColumnName("alt_text");

						b.Property<DateTime>("createdAt")
											.HasColumnType("datetime")
											.HasColumnName("created_at");

						b.Property<int>("createdBy")
											.HasColumnType("int")
											.HasColumnName("created_by");

						b.Property<short>("mediaType")
											.HasColumnType("smallint")
											.HasColumnName("media_type");

						b.Property<string>("originalName")
											.HasColumnType("varchar(2000)")
											.HasColumnName("original_name");

						b.Property<string>("source")
											.HasColumnType("varchar(2000)")
											.HasColumnName("source");

						b.Property<string>("title")
											.HasColumnType("varchar(2000)")
											.HasColumnName("title");

						b.HasKey("id");

						b.ToTable("media");
					});

			modelBuilder.Entity("SportSite6.Models.Page", b =>
					{
						b.Property<int>("id")
											.ValueGeneratedOnAdd()
											.HasColumnType("int")
											.HasColumnName("id");

						b.Property<sbyte>("approve")
											.HasColumnType("tinyint")
											.HasColumnName("approve");

						b.Property<int?>("category_id")
											.HasColumnType("int");

						b.Property<DateTime>("createdAt")
											.HasColumnType("datetime")
											.HasColumnName("created_at");

						b.Property<int>("createdBy")
											.HasColumnType("int")
											.HasColumnName("created_by");

						b.Property<string>("description")
											.HasColumnType("text")
											.HasColumnName("description");

						b.Property<string>("heading")
											.HasColumnType("varchar(5000)")
											.HasColumnName("heading");

						b.Property<int?>("media_id")
											.HasColumnType("int");

						b.Property<string>("slug")
											.HasColumnType("varchar(255)")
											.HasColumnName("slug");

						b.Property<string>("title")
											.HasColumnType("varchar(2000)")
											.HasColumnName("title");

						b.Property<DateTime>("updatedAt")
											.HasColumnType("datetime")
											.HasColumnName("updated_at");

						b.HasKey("id");

						b.HasIndex("category_id");

						b.HasIndex("media_id");

						b.ToTable("page");
					});

			modelBuilder.Entity("SportSite6.Models.User", b =>
					{
						b.Property<int>("id")
											.ValueGeneratedOnAdd()
											.HasColumnType("int")
											.HasColumnName("id");

						b.Property<DateTime>("birthday")
											.HasColumnType("date")
											.HasColumnName("birthday");

						b.Property<string>("email")
											.HasColumnType("varchar(255)")
											.HasColumnName("email");

						b.Property<int>("gender")
											.HasColumnType("int")
											.HasColumnName("gender");

						b.Property<string>("name")
											.HasColumnType("varchar(255)")
											.HasColumnName("name");

						b.Property<string>("password")
											.HasColumnType("varchar(255)")
											.HasColumnName("password");

						b.Property<string>("phone")
											.HasColumnType("varchar(15)")
											.HasColumnName("phone");

						b.Property<string>("role")
											.HasColumnType("enum('Admin', 'User')")
											.HasColumnName("role");

						b.Property<string>("username")
											.HasColumnType("varchar(50)")
											.HasColumnName("username");

						b.HasKey("id");

						b.ToTable("user");
					});

			modelBuilder.Entity("SportSite6.Models.Category", b =>
					{
						b.HasOne("SportSite6.Models.Media", "media")
											.WithMany()
											.HasForeignKey("media_id");

						b.Navigation("media");
					});

			modelBuilder.Entity("SportSite6.Models.Content", b =>
					{
						b.HasOne("SportSite6.Models.Media", "media")
											.WithMany()
											.HasForeignKey("media_id");

						b.HasOne("SportSite6.Models.Page", "page")
											.WithMany()
											.HasForeignKey("page_id");

						b.Navigation("media");

						b.Navigation("page");
					});

			modelBuilder.Entity("SportSite6.Models.Evaluation", b =>
					{
						b.HasOne("SportSite6.Models.Media", "media")
											.WithMany()
											.HasForeignKey("media_id");

						b.HasOne("SportSite6.Models.User", "user")
											.WithMany()
											.HasForeignKey("user_id");

						b.Navigation("media");

						b.Navigation("user");
					});

			modelBuilder.Entity("SportSite6.Models.Page", b =>
					{
						b.HasOne("SportSite6.Models.Category", "category")
											.WithMany()
											.HasForeignKey("category_id");

						b.HasOne("SportSite6.Models.Media", "media")
											.WithMany()
											.HasForeignKey("media_id");

						b.Navigation("category");

						b.Navigation("media");
					});
#pragma warning restore 612, 618
		}
	}
}
